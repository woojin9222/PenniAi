/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/HL3xlfvJNpD
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Chivo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Separator } from "@/components/ui/separator"
import { useTheme } from "next-themes";

export function AccountPage() {
  const [isSignup, setIsSignup] = useState(true)
  const [isDarkMode, setIsDarkMode] = useState(false)
    const { setTheme } = useTheme()
  return (
    (<div
      className={`flex min-h-[100dvh] flex-col items-center justify-center bg-background transition-all duration-500 ease-in-out transition-background `}>
      <div
        className={`w-full max-w-md rounded-lg border border-input bg-card p-6 shadow-lg transition-all duration-500 ease-in-out transition-background`}>
        {isSignup ? (
          <div>
            <div className="mb-6 text-center">
              <h1
                className={`text-3xl font-bold transition-all duration-500 ease-in-out`}>
                Sign Up
              </h1>
              <p
                className={`text-muted-foreground transition-all duration-500 ease-in-out`}>
                Create your account to get started
              </p>
            </div>
            <form className="space-y-4 transition-all duration-500 ease-in-out">
              <div
                className="grid grid-cols-2 gap-4 transition-all duration-500 ease-in-out">
                <div className="space-y-2 transition-all duration-500 ease-in-out">
                  <Label
                    htmlFor="name"
                    className={`transition-all duration-500 ease-in-ou`}>
                    Name
                  </Label>
                  <Input
                    id="name"
                    placeholder="John Doe"
                    required
                    className={`transition-all duration-500 ease-in-out`} />
                </div>
                <div className="space-y-2 transition-all duration-500 ease-in-out">
                  <Label
                    htmlFor="email"
                    className={`transition-all duration-500 ease-in-out`}>
                    Email
                  </Label>
                  <Input
                    id="email"
                    type="email"
                    placeholder="m@example.com"
                    required
                    className={`transition-all duration-500 ease-in-out`} />
                </div>
              </div>
              <div className="space-y-2 transition-all duration-500 ease-in-out">
                <Label
                  htmlFor="password"
                  className={`transition-all duration-500 ease-in-out`}>
                  Password
                </Label>
                <Input
                  id="password"
                  type="password"
                  required
                  className={`transition-all duration-500 ease-in-out`} />
              </div>
              <Button
                type="submit"
                className={`w-full transition-all duration-500 ease-in-out`}>
                Sign Up
              </Button>
            </form>
            <Separator
              className={`my-6 transition-all duration-500 ease-in-out`} />
            <div
              className="flex flex-col items-center gap-2 transition-all duration-500 ease-in-out">
              <Button
                variant="outline"
                className={`w-full transition-all duration-500 ease-in-out`}>
                <GithubIcon
                  className={`mr-2 h-4 w-4 transition-all duration-500 ease-in-out`} />
                Sign up with GitHub
              </Button>
              <Button
                variant="outline"
                className={`w-full transition-all duration-500 ease-in-out`}>
                <ChromeIcon
                  className={`mr-2 h-4 w-4 transition-all duration-500 ease-in-out`} />
                Sign up with Google
              </Button>
            </div>
            <div
              className={`mt-4 text-center text-sm transition-all duration-500 ease-in-out`}>
              Already have an account?{" "}
              <button
                type="button"
                className={`font-medium underline underline-offset-4 transition-all duration-500 ease-in-out`}
                onClick={() => setIsSignup(false)}>
                Log in
              </button>
            </div>
          </div>
        ) : (
          <div>
            <div
              className={`mb-6 text-center transition-all duration-500 ease-in-out`}>
              <h1
                className={`text-3xl font-bold transition-all duration-500 ease-in-out`}>
                Log In
              </h1>
              <p
                className={`text-muted-foreground transition-all duration-500 ease-in-out`}>
                Enter your credentials to access your account
              </p>
            </div>
            <form className="space-y-4 transition-all duration-500 ease-in-out">
              <div className="space-y-2 transition-all duration-500 ease-in-out">
                <Label
                  htmlFor="email"
                  className={`transition-all duration-500 ease-in-out`}>
                  Email
                </Label>
                <Input
                  id="email"
                  type="email"
                  placeholder="m@example.com"
                  required
                  className={`transition-all duration-500 ease-in-out`} />
              </div>
              <div className="space-y-2 transition-all duration-500 ease-in-out">
                <Label
                  htmlFor="password"
                  className={`transition-all duration-500 ease-in-out`}>
                  Password
                </Label>
                <Input
                  id="password"
                  type="password"
                  required
                  className={`transition-all duration-500 ease-in-out`} />
              </div>
              <Button
                type="submit"
                className={`w-full transition-all duration-500 ease-in-out`}>
                Log In
              </Button>
            </form>
            <Separator
              className={`my-6 transition-all duration-500 ease-in-out`} />
            <div
              className="flex flex-col items-center gap-2 transition-all duration-500 ease-in-out">
              <Button
                variant="outline"
                className={`w-full transition-all duration-500 ease-in-out`}>
                <GithubIcon
                  className={`mr-2 h-4 w-4 transition-all duration-500 ease-in-out`} />
                Log in with GitHub
              </Button>
              <Button
                variant="outline"
                className={`w-full transition-all duration-500 ease-in-out`}>
                <ChromeIcon
                  className={`mr-2 h-4 w-4 transition-all duration-500 ease-in-out`} />
                Log in with Google
              </Button>
            </div>
            <div
              className={`mt-4 text-center text-sm transition-all duration-500 ease-in-out`}>
              Don`t have an account?{" "}
              <button
                type="button"
                className={`font-medium underline underline-offset-4 transition-all duration-500 ease-in-out`}
                onClick={() => setIsSignup(true)}>
                Sign up
              </button>
            </div>
          </div>
        )}
      </div>
      <div
        className={`fixed bottom-4 left-4 flex items-center gap-2 bg-card p-2 rounded-md shadow-lg transition-all duration-500 ease-in-out`}
        onClick={() => {setIsDarkMode(!isDarkMode); isDarkMode ? setTheme("light") : setTheme("dark")}}
      >
        <SunMoonIcon className="w-5 h-5 transition-all duration-500 ease-in-out" />
        <span className="text-sm font-medium">{isDarkMode ? "Light Mode" : "Dark Mode"}</span>
      </div>
    </div>)
  );
}

function ChromeIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <circle cx="12" cy="12" r="10" />
      <circle cx="12" cy="12" r="4" />
      <line x1="21.17" x2="12" y1="8" y2="8" />
      <line x1="3.95" x2="8.54" y1="6.06" y2="14" />
      <line x1="10.88" x2="15.46" y1="21.94" y2="14" />
    </svg>)
  );
}


function GithubIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path
        d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4" />
      <path d="M9 18c-4.51 2-5-2-7-2" />
    </svg>)
  );
}


function MoonIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z" />
    </svg>)
  );
}


function SunMoonIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M12 8a2.83 2.83 0 0 0 4 4 4 4 0 1 1-4-4" />
      <path d="M12 2v2" />
      <path d="M12 20v2" />
      <path d="m4.9 4.9 1.4 1.4" />
      <path d="m17.7 17.7 1.4 1.4" />
      <path d="M2 12h2" />
      <path d="M20 12h2" />
      <path d="m6.3 17.7-1.4 1.4" />
      <path d="m19.1 4.9-1.4 1.4" />
    </svg>)
  );
}